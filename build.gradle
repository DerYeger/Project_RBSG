plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'application'
	id 'org.openjfx.javafxplugin' version '0.0.7'
}

apply plugin: 'io.spring.dependency-management'

group = 'de.uniks.se19.team_g'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11
mainClassName = 'de.uniks.se19.team_g.project_rbsg.ProjectRbsgFXApplication'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//javafx 11 components for multiplatform deployment
	runtimeOnly 'org.openjfx:javafx-graphics:$javafx.version:win'
	runtimeOnly 'org.openjfx:javafx-graphics:$javafx.version:linux'
	runtimeOnly 'org.openjfx:javafx-graphics:$javafx.version:mac'

	testCompile group: 'org.testfx', name: 'testfx-core', version: '4.0.15-alpha'
	testCompile group: 'org.testfx', name: 'testfx-junit', version: '4.0.15-alpha'
	
	compile 'javax.json:javax.json-api:1.0'
	compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.3.1'
	compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'
}

javafx {
	version = '11.0.2'
	modules = [ 'javafx.controls', 'javafx.fxml' ]
}